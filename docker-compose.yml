services:

  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-network
    restart: always

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    depends_on:
      - config-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    restart: always

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-network
    restart: always

  activemq:
    image: rmohr/activemq
    container_name: activemq
    depends_on:
      - eureka-server
    ports:
      - "61616:61616"
      - "8161:8161"
    networks:
      - microservices-network
    restart: always

  postgresql:
    image: postgres:15
    container_name: postgresql
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - microservices-network
    volumes:
      - mongo-data:/data/db
    restart: always

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - config-server
      - eureka-server
      - zipkin
    ports:
      - "8095:8095"
    networks:
      - microservices-network
    environment:
      - JWT_SECRET_KEY
    env_file:
      - env.properties
    restart: always

  auth-service:
    build: ./auth-service
    container_name: auth-service
    depends_on:
      - config-server
      - eureka-server
      - postgresql
      - activemq
      - zipkin
    networks:
      - microservices-network
    environment:
      - DB_USER_AUTH_URL
      - DB_USER_AUTH_USERNAME
      - DB_USER_AUTH_PASSWORD
      - JWT_SECRET_KEY
    env_file:
      - env.properties
    restart: always

  gym-app:
    build: ./gym-app
    container_name: gym-app
    depends_on:
      - config-server
      - eureka-server
      - postgresql
      - zipkin
      - activemq
    networks:
      - microservices-network
    environment:
      - DB_POSTGRES_URL
      - DB_POSTGRES_USERNAME
      - DB_POSTGRES_PASSWORD
    restart: always

  training-report:
    build: ./training-report
    container_name: training-report
    depends_on:
      - config-server
      - eureka-server
      - mongodb
      - zipkin
      - activemq
    networks:
      - microservices-network
    environment:
      - MONGO_DB_URL
    restart: always

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data: